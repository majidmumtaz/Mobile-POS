package com.setecs.android.mpos.fragments;

import com.setecs.android.mpos.R;
import com.setecs.android.mpos.provider.MenuCategory;
import com.setecs.android.mpos.provider.PersonnelRegister;

import android.app.AlertDialog;
import android.app.Dialog;
import android.app.DialogFragment;
import android.content.ContentValues;
import android.content.DialogInterface;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Spinner;
import android.widget.AdapterView.OnItemSelectedListener;
import android.widget.Toast;

public class AddPersonnelFragment extends DialogFragment {
	String value = null;
	public static AddPersonnelFragment newInstance() {
		AddPersonnelFragment frag = new AddPersonnelFragment();
		return frag;
	}
	
	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		
	}
	
	/*@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle b) {
		View view = inflater.inflate(R.layout.personnel_detail, container, false);
				
		return view;
	}
	*/
	
	
	public Dialog onCreateDialog(Bundle savedInstanceState) {
		LayoutInflater inflater = LayoutInflater.from(getActivity());
		 
		final View v = inflater.inflate(R.layout.personnel_detail, null);
		final Spinner personnelRoleSpinner = (Spinner) v.findViewById(R.id.personnelRoleSpinner);
		
				
		personnelRoleSpinner.setOnItemSelectedListener(new OnItemSelectedListener(){

			@Override
			public void onItemSelected(AdapterView<?> parent, View view,
					int pos, long Id) {
				// TODO Auto-generated method stub
				String str = parent.getItemAtPosition(pos).toString();
				 if (str.equals("Select Personnel Role")) {
					 //Toast.makeText(parent.getContext(), "Note: Personnel Role should be valid ! ",
						//	 Toast.LENGTH_SHORT).show();
									
					 personnelRoleSpinner.setFocusable(true);
					 value = personnelRoleSpinner.getSelectedItem().toString();
					 return;
					 
			        }else {
			            // code to process the selection
			        	value = personnelRoleSpinner.getSelectedItem().toString();			        	
			        }
				
			}

			@Override
			public void onNothingSelected(AdapterView<?> parent) {
				// TODO Auto-generated method stub
				return;
			}
			
			
		});
		return new AlertDialog.Builder(getActivity())
				.setTitle("Register Personnel")
				.setView(v)
				.setCancelable(true)				
				.setNegativeButton("Register",
						new DialogInterface.OnClickListener() {

							@Override
							public void onClick(DialogInterface dialog,
									int which) {
								EditText personnelFNameEditText = (EditText) v
										.findViewById(R.id.personnel_txtbfname);								
								//Spinner personnelRoleSpinner = (Spinner) v
										//.findViewById(R.id.personnelRoleSpinner);
								EditText personnelPinEditText = (EditText) v
										.findViewById(R.id.personnel_txtbpin);
								EditText personnelMnoEditText = (EditText) v
										.findViewById(R.id.personnel_txtbmobileno);
								EditText personnelemailEditText = (EditText) v
										.findViewById(R.id.personnel_txtbemailaddress);
								if (!(personnelFNameEditText.getText().toString()
										.equals("")&&																				
										personnelPinEditText.getText().toString()
										.equals("") &&
										personnelMnoEditText.getText().toString()
										.equals("") ||
										personnelemailEditText.getText().toString()
										.equals(""))
									) {
									addPersonnelToDB(personnelFNameEditText.getText().toString(),											
											value,
											personnelPinEditText.getText().toString(),
											personnelMnoEditText.getText().toString(),
											personnelemailEditText.getText().toString()
									);
																
								}
							}
						}).setPositiveButton("Cancel", null).create();
	}
	

	private void addPersonnelToDB(String fName,  String strRole,  
								 String strPIN, String mNo, String emailAdd) {
		ContentValues values = new ContentValues();
		values.put(PersonnelRegister.PRegistration.P_FNAME, fName);		
		values.put(PersonnelRegister.PRegistration.P_ROLE, strRole);
		values.put(PersonnelRegister.PRegistration.P_PIN, strPIN);
		values.put(PersonnelRegister.PRegistration.P_MNO, mNo);
		values.put(PersonnelRegister.PRegistration.P_EMAIL, emailAdd);
				

		getActivity().getContentResolver().insert(
				PersonnelRegister.PRegistration.CONTENT_URI, values);
	}
	
	

}
